@using GpuMiningInsights.Web.Models
@using GpuMiningInsights.Core;
@model List<GPU>
@{
    var gpuDummy = Model;
    ViewBag.Title = "Home Page";
    DateTime? lastUpdate = ViewData["LastUpdate"] as DateTime?;
    if (gpuDummy == null)
    {
        gpuDummy = new List<GPU>();
    }
}

<div class="jumbotron">
    <h1>Gpu Mining Insights</h1>
    <p class="lead">
    Gpu Mining insights provides you with the right information for getting you numbers right , including the Current price of the gpu.</p>
    <p>
        Last Update : @lastUpdate &nbsp;
        @using (Html.BeginForm("Index","Home",FormMethod.Post))
        {
            <button type="submit" class="btn btn-primary btn-lg"> Refresh</button>
        }
    </p>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-striped">
            <thead>
            @*

                System.Console.WriteLine($"GPU {gpuName} ,
                ProfitPerYearMinusCostUsd = {item.ProfitPerYearMinusCostUsd},
                Revenue ($/Day) = {item.RevenuePerDayUsd}, 
                Profit ($/Day) = {item.ProfitPerDayUsd}  ,
                HashRate = {item.Hashrate}, 
                HashCost = {hashPrice}, 
                FROM = {hashPriceSource } @ Price : {gpuPriceFromSource }");

        ($"GPU {gpuName} HashRate = {item.Hashrate}, HashCost = {hashPrice}, FROM = {hashPriceSource } @ Price : {gpuPriceFromSource }");*@


                <tr>
                    <th>GPU</th>
                    <th>Revenue ($/Day)</th>
                    <th>Profit ($/Day)</th>
                    <th>Profit(Minus GPU Cost Usd)/Year </th>
                    <th>Hashrate</th>
                    <th>HashCost (Price Source)</th>
                    <th>Price</th>
                    <th>Revenue</th>
                    <th>ROI</th>
                </tr>
            </thead> 
            <tbody>
                @foreach (GPU gpu in gpuDummy)
                {
                    string hashPrice = gpu.LowestHashPrice.HashPrice.ToString();
                    string hashPriceSource = gpu.LowestHashPrice.Source;
                    string gpuPriceFromSource = gpu.PriceSources.FirstOrDefault(s => s.Name == hashPriceSource).Price.ToString();
                    double annualRevenue = gpu.ProfitPerDayUsd * 365 ;
                    double roi = (annualRevenue - gpu.PriceSources.FirstOrDefault(s => s.Name == hashPriceSource).Price)/ gpu.PriceSources.FirstOrDefault(s => s.Name == hashPriceSource).Price;
                    string roistyle = roi >= 0 ? "" : "style=\"color:#de6c6c\"";
                    if (roi > 30)
                    {
                        roistyle = "style=\"color:#0fc304\"";
                    }
                <tr>
                    <td>@gpu.Name</td>
                    <td>@gpu.RevenuePerDayUsd</td>
                    <td>@gpu.ProfitPerDayUsd</td>
                    <td>@gpu.ProfitPerYearMinusCostUsd</td>
                    <td>@gpu.Hashrate</td>
                    <td>@hashPrice (@hashPriceSource)</td>
                    <td>@gpuPriceFromSource</td>
                    <td>@annualRevenue </td>
                     <td @Html.Raw(roistyle)>@(Math.Round(roi * 100,2)) %</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
  
</div>