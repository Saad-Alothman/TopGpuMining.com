@using GpuMiningInsights.Web.Models
@using GpuMiningInsights.Core;
@using Newtonsoft.Json
@using System.Configuration
@model GpusInsightsReport

@{
    ViewBag.Title = "Best GPUs for mining";
    string lastUpdate = Model?.Date.ToString("dd-MM-yyyy");

}

<br />
<br />
<br />

<div class="row">
    <div class="col-md-12">
        <div style="display:inline-block;width:100%;scroll-x:auto">
            <table class="table table-bordered table-striped">
                <thead>
                    @*

                                System.Console.WriteLine($"GPU {gpuName} ,
                                ProfitPerYearMinusCostUsd = {item.ProfitPerYearMinusCostUsd},
                                Revenue ($/Day) = {item.RevenuePerDayUsd},
                                Profit ($/Day) = {item.ProfitPerDayUsd}  ,
                                HashRate = {item.Hashrate},
                                HashCost = {hashPrice},
                                FROM = {hashPriceSource } @ Price : {gpuPriceFromSource }");

                        ($"GPU {gpuName} HashRate = {item.Hashrate}, HashCost = {hashPrice}, FROM = {hashPriceSource } @ Price : {gpuPriceFromSource }");*@


                    <tr>
                        <th>GPU</th>
                        <th>Revenue ($/Day)</th>
                        <th>Profit ($/Day)</th>
                        <th>Hashrate</th>
                        <th>Coin</th>
                        <th>Coin Difficulty</th>
                        <th>Coin Block Reward</th>
                        <th>Price USD</th>
                        <th>Revenue</th>
                        <th>ROI</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                @{
                    int index = 0;
                }
                @foreach (var gpuInsightReport in Model.GpuInsightReports)
                {






                    <tr>
                        <td>@gpuInsightReport.Gpu.Name</td>
                        <td>@gpuInsightReport.HighestRevenueCoin.RevenuePerDay</td>
                        <td>@gpuInsightReport.ProfitPerDay</td>
                        <td>@gpuInsightReport.HighestRevenueCoin.Hashrate.HashrateNumber</td>
                        <td>@gpuInsightReport.HighestRevenueCoin.Coin.Name</td>
                        <td>@gpuInsightReport.HighestRevenueCoin.Coin.Difficulty</td>
                        <td>@gpuInsightReport.HighestRevenueCoin.Coin.BlockReward</td>
                        <td>@(gpuInsightReport.LowestPriceSourceItem?.PriceUSD) $</td>
                        <td>@(gpuInsightReport.HighestRevenueCoin.AnualRevenue) </td>
                        <td @Html.Raw(gpuInsightReport.CssStyle)>@(gpuInsightReport.ROI) %</td>
                        <td>
                            <button type="button" class="btn btn-primary" onclick="onBuyNowClick(@index)">See Buying Options!</button>
                        </td>
                    </tr>
                    index++;
                }
                </tbody>



            </table>


        </div>
        <div class="row">
            <div class="col-md-offset-6 col-md-6" id="price-details-div">

            </div>
        </div>
        <div class="hidden">
            @for (int i = 0; i < Model.GpuInsightReports.Count; i++)
            {
                GpuInsightReport gpuInsightReport = Model.GpuInsightReports[i];
                Gpu gpuOld = gpuInsightReport.Gpu;
                <h3></h3>
                <table class="table table-bordered table-striped" id="gpuprices-@i">
                    <caption>
                        Buying options for @gpuOld.Name
                    </caption>
                    <thead>
                        <tr>
                            <th>GPU</th>
                            <th>Price (USD)</th>
                            <th>From</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var priceSourceItem in gpuInsightReport.PriceSourceItems)
                        {
                            string name = priceSourceItem.ItemName;
                            name = string.IsNullOrWhiteSpace(name) ? gpuOld.Name : name;
                            <tr>
                                <td>
                                    <a href="@priceSourceItem.ItemURL">
                                        @if (!string.IsNullOrWhiteSpace(priceSourceItem.ImageUrl))
                                        {
                                            <img src="@priceSourceItem.ImageUrl" class="img-responsive" />
                                        }
                                        @name
                                    </a>
                                </td>
                                <td>@priceSourceItem.PriceUSD $ </td>
                                <td>@priceSourceItem.PriceSource.Name </td>
                                <td>
                                    <a href="@priceSourceItem.ItemURL" onclick="SendBuyNowClickAnalytics()" class="btn btn-primary">Buy From @priceSourceItem.PriceSource.Name!</a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            }
        </div>

    </div>

</div>

<div class="jumbotron">
    <h1>Top GPU Mining</h1>
    <br />
    <p class="lead">
        Top GPU Mining provides you with the right information for getting the best GPUs that are most profitable for mining, by considering various parameters.
    </p>
    <p>
        Last Update : @lastUpdate &nbsp;

    </p>
</div>
<p>
    by <a href="https://stackoverflow.com/users/690785/saad-alothman">Saad Alothman</a> - <a href="https://twitter.com/saad_o77">@@saad_o77</a>
    <br />
    Email: me@saadalothman.com

    <br />

    Hash rates info from : http://www.whattomine.com

    Version Number: @ConfigurationManager.AppSettings["VersionNumber"]
</p>

@section scripts
{
    <script>
        function onBuyNowClick(i) {
            $('#price-details-div').html($('#gpuprices-' + i).clone());
        }
    </script>

}
