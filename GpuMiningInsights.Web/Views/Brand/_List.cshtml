@model SearchResult<Brand>

@using CreaDev.Framework.Core.Resources
@using X.PagedList.Mvc;
@{
    var brandSearchCrietriaViewModel = new BrandSearchCrietriaViewModel();

    if (ViewData[Constants.SEARCH_MODEL] != null)
    {
        brandSearchCrietriaViewModel = ViewData[Constants.SEARCH_MODEL] as BrandSearchCrietriaViewModel;
    }
}
<div class="table-responsive">
    <table class="table table-striped table-bordered">

        <tr>
            <th>
                @Html.DisplayNameFor(a => a.Result.First().Name)
            </th>

            <th>
                @Html.DisplayNameFor(a => a.Result.First().Description)
            </th>
            

            <th>
                @Common.Actions
            </th>
        </tr>

        @foreach (var item in Model.Result)
    {
            <tr>
                <td>
                    @(item.Name?.ToString())
                </td>
                
                <td>
                    @(item.Description?.ToString())
                </td>
            
                <td width="180">

                    @using CreaDev.Framework.Web.Mvc.Html.Ajax
@using GpuMiningInsights.Web.Models.Search
                    <a href="@Url.Action("Edit", "Brand", new {id = item.Id})" @CreaDevAjaxOptions.GenerateAjaxUnobtrusiveHtmlAttributes(new CreaDevAjaxOptions("#brand-list", "#edit-brand-form-div", onCompleteMethod: "showEditBrand();"))
                       class="btn btn-sm green">
                        <i class="fa fa-edit"></i>
                        @Common.Edit
                    </a>

                    <a href="@Url.Action("Delete", "Brand", new {id = item.Id})" @CreaDevAjaxOptions.GenerateAjaxUnobtrusiveHtmlAttributes(new CreaDevAjaxOptions("#brand-list", "#delete-brand-form-div", httpMethod: FormMethod.Get, onCompleteMethod: "showDeleteBrand();"))
                       class="btn btn-sm red">
                        <i class="fa fa-remove"></i>
                        @Common.Delete
                    </a>
                </td>
            </tr>
    }

    </table>

</div>
@{
    BrandSearchCrietriaViewModel searchCrietriaViewModel = new BrandSearchCrietriaViewModel();
}
@Html.PagedListPager(Model.ToPagedList(), page => Url.Action("Search", "Brand", brandSearchCrietriaViewModel.ToRouteValueDictionary(page))
    , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
    {
        HttpMethod = "GET",
        OnBegin = "block('#brand-list')",
        OnComplete = "unblock('#brand-list')",
        UpdateTargetId = "brand-list"
    }))